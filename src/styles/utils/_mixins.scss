@mixin clearfix {
  &::after {
      content: "";
      display: table;
      clear: both;
  }
}
@mixin absTopLeft {
  position: absolute;
  top: 0;
  left: 0;
}
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
@mixin absVlCenter {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin absHrCenter {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

@mixin defaultTransition {
  transition: all .3s ease;
}
@mixin offset-gap {
  content: " "; 
  display: block; 
  margin-top: -80px; 
  height: 80px;
  visibility: hidden; 
  pointer-events: none;
}

@mixin flex-row {
  display: flex;
  justify-content: flex-start;
  align-items: stretch;
}
@mixin flex-column {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin header-shadow {
  box-shadow: 0 1px 10px rgba(0,0,0, 0.2);
}

@mixin bg-check-svg($color) {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='#{$color}' width='18px' height='18px'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z'/%3E%3C/svg%3E");
}
// MEDIA QUERY DISTRIBUTE

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 480px) { @content };
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 768px) { @content };
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 1025px) { @content };
  }
  @if $breakpoint == desktop {
    @media only screen and (max-width: 1368px) { @content };
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 1440px) { @content };
  }
}
